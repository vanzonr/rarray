#!/bin/bash
# NOT an autotools configure, just detects compiler for rarray.h 's Makefile
# Ramses van Zon, January 2014

# stop immediately when there is an error
set -e

#############################################################################
function detect_library()
{
    # Detect a library '$1' by looking for the headerfile '$2' if not
    # found, the compile line will get '$3' added to it.  if founf,
    # the compile line will get '$4' added to it, and the linkline
    # will get '$5' added. If the directories of the include files and
    # library files are encoded in an environment variables that
    # contain MODULE_I and MODULE_L, respectively, then these will get
    # added to the accincdir and acclibdir.
    # Example: 
    #   detect_library ARMADILLO armadillo -DNOARMADILLO -DEIGEN_NO_DEBUG ""
    modulename="$1"
    headerfile="$2"
    compilewithout="$3"
    compilewith="$4"
    addlibrary="$5"
    echo -n "Detecting $modulename's $headerfile... " 
    incdir=$(env | grep ${modulename}_I | head -1 | awk -F= '{print $2}')
    incvar=$(env | grep ${modulename}_I | head -1 | awk -F= '{print $1}')
    libdir=$(env | grep ${modulename}_L | head -1 | awk -F= '{print $2}')
    libvar=$(env | grep ${modulename}_L | head -1 | awk -F= '{print $1}')
    if [ "$incdir" ]; then
        incdir="-I$incdir"
    fi
    if [ "$libdir" ]; then
        libdir="-L$libdir"
    fi
    cat > $tmpfile <<-EOF
	#include "$headerfile"
	int main(){return 0;}
EOF
    if ! $CXX $incdir $libdir $tmpfile $addlib &> /dev/null; then 
        echo "not found"
        echo -n " $compilewithout" >> config.mk
    else
        #$CXX -E $incdir $tmpfile | grep $headerfile | head -n 1| awk -F\" '{print $2}'
        echo "found"
        echo -n " $compilewith" >> config.mk
        if [ -n "$incvar" ]; then 
            accincdir="$accincdir -IZ{$incvar}"
        fi
        if [ -n "$libvar" ]; then 
            acclibdir="$acclibdir -LZ{$libvar}"
        fi
    fi
}

if [[ "$1" == "--help" ]]; then
    # print help message
    echo "This configure script detects compiler for rarray.h 's Makefile"
    echo "Usage: [CXX=<COMPILER>] configure [--prefix=<PATH>]"
    false   
else
    
    # determine prefix
    if [ "${1:0:9}" == "--prefix=" ]; then
        prefix="${1:9}"
        shift
    elif [ "$1" == "--prefix" ]; then
        prefix="$2"
        shift 2
    else
        prefix="/usr"
    fi
    echo "Installation prefix set to '${prefix}'."
    
    echo -n "Selecting C++ compiler... "
    # compiler must be in the set 
    compilerset="clang++ xlc++ icpc g++"
    # or be specified in the environment variable CXX
    compilerset="${CXX} ${compilerset}"
    for compiler in ${compilerset}; do
        if which ${compiler} >& /dev/null; then
            CXXMKINC="compiler.${compiler}.mk"  #for each compiler there is an include makefile
            if [ -f "${CXXMKINC}" ]; then
                echo ${compiler}
                CXX=${compiler}
                break;
            else
                echo "Compiler $compiler does not have an associated compiler.${compiler}.mk file"
            fi
        fi
    done
   
    # ${CXX} and ${CXXMKINC} should be defined now
    if [ -n "${CXX}" ]; then        
        echo "Generating config.mk from ${CXXMKINC}"
        FC=$(grep FC= ${CXXMKINC}|cut -f2- -d=)
        if which $FC >& /dev/null; then
            cp -f ${CXXMKINC} config.mk
        else
            echo "WARNING: Omitting non-exising fortran compiler ${FC}."
            grep -v "FC=${FC}" ${CXXMKINC} | grep -v "FFLAGS=" > config.mk
        fi
        # detect installation of BLITZ (only needed for benchmarks)
        echo -e "#\n# Variables for compiling comparison benchmarks\n#" >> config.mk
        echo -n "MORECPPFLAGSOPT=-DNDEBUG" >> config.mk
        tmpfile=$(mktemp --suffix .cc)
        #########################################################
        detect_library BLITZ blitz/array.h -DNOBLITZ "" ""
        #########################################################
        detect_library BOOST boost/multi_array.hpp -DNOBOOST -DBOOST_DISABLE_ASSERTS ""
        #########################################################
        detect_library EIGEN3 eigen3/Eigen/Dense -DNOEIGEN3 "-DNDEBUG -DEIGEN_NO_DEBUG" ""
        #########################################################
        detect_library ARMADILLO armadillo -DNOARMADILLO -DARMA_NO_DEBUG ""
        #######################################################
        echo >> config.mk
        rm -f ./a.out
        # Extra include dirs added to MORECPPFLAGS
        if [ "$accincdir" ]; then
            echo "MORECPPFLAGS=${accincdir:1}"  | sed 's/-IZ/-I$/g' >> config.mk
        fi
        if [ "$acclibdir" ]; then 
            echo "MORELDFLAGS+=${acclibdir:1}"  | sed 's/-LZ/-L$/g' >> config.mk
        fi       
        # add prefix to the makefile include file
        echo -e "#\n# Default installation directory\n#\nPREFIX?=${prefix}" >> config.mk
        # print what to do next
        echo "To build and run unit tests:            make test"
        echo "To run unit tests through valgrind:     make valgrindtest"
        echo "To check code coverage of tests:        make covertest"
        echo "To build and run benchmark test:        make benchmark"
        echo "To build the documentation:             make doc"
        echo "To test the code in the documentation:  make doctest"
        echo "To install rarray.h:                    make [PREFIX=directory]"
    else
        echo "ERROR: Compiler not found"
        false
    fi
    
fi

