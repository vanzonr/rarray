#!/bin/bash
# NOT an autotools configure, just detects compiler for rarray.h 's Makefile
# Ramses van Zon, January 2014

# stop immediately when there is an error
set -e

if [[ "$1" == "--help" ]]; then
    # print help message
    echo "This configure script detects compiler for rarray.h 's Makefile"
    echo "Usage: [CXX=<COMPILER>] configure [--prefix=<PATH>]"
    false   
else
    
    # determine prefix
    if [ "${1:0:9}" == "--prefix=" ]; then
        prefix="${1:9}"
        shift
    elif [ "$1" == "--prefix" ]; then
        prefix="$2"
        shift 2
    else
        prefix="/usr"
    fi
    echo "Installation prefix set to '${prefix}'."
    
    echo -n "Selecting C++ compiler... "
    # compiler must be in the set 
    compilerset="clang++ xlc++ icpc g++"
    # or be specified in the environment variable CXX
    compilerset="${CXX} ${compilerset}"
    for compiler in ${compilerset}; do
        if which ${compiler} >& /dev/null; then
            CXXMKINC="compiler.${compiler}.mk"  #for each compiler there is an include makefile
            if [ -f "${CXXMKINC}" ]; then
                echo ${compiler}
                CXX=${compiler}
                break;
            else
                echo "Compiler $compiler does not have an associated compiler.${compiler}.mk file"
            fi
        fi
    done
   
    # ${CXX} and ${CXXMKINC} should be defined now
    if [ -n "${CXX}" ]; then        
        echo "Generating config.mk from ${CXXMKINC}"
        FC=$(grep FC= ${CXXMKINC}|cut -f2- -d=)
        if which $FC >& /dev/null; then
            cp -f ${CXXMKINC} config.mk
        else
            echo "WARNING: Omitting non-exising fortran compiler ${FC}."
            grep -v "FC=${FC}" ${CXXMKINC} | grep -v "FFLAGS=" > config.mk
        fi
        # detect installation of BLITZ (only needed for benchmarks)
        echo -e "#\n# Comparison test settings\n#" >> config.mk
        echo -n "MORECPPFLAGSOPT=-DNDEBUG" >> config.mk
        #########################################################
        headerfile="blitz/array.h"
        echo -n "Detecting $headerfile... " 
        tmpfile=$(mktemp --suffix .cc)
        cat > $tmpfile <<-EOF
	#include "$headerfile"
	int main(){return 0;}
EOF
        if ! $CXX $tmpfile &> /dev/null; then 
            echo "not found"
            echo -n " -DNOBLITZ" >> config.mk
        else
            echo "found"
        fi
        #########################################################
        headerfile="boost/multi_array.hpp"
        echo -n "Detecting $headerfile... " 
        cat > $tmpfile <<-EOF
	#include "$headerfile"
	int main(){return 0;}
EOF
        if ! $CXX $tmpfile &> /dev/null; then 
            echo "not found"
            echo -n " -DNOBOOST" >> config.mk
        else
            echo "found"
            echo -n " -DBOOST_DISABLE_ASSERTS" >> config.mk
        fi
        #########################################################
        headerfile="eigen3/Eigen/Dense"
        echo -n "Detecting $headerfile... " 
        cat > $tmpfile <<-EOF
	#include "$headerfile"
	int main(){return 0;}
EOF
        if ! $CXX $tmpfile &> /dev/null; then 
            echo "not found"
            echo -n " -DNOEIGEN3" >> config.mk
        else
            echo "found"
            echo -n " -DEIGEN_NO_DEBUG" >> config.mk
        fi
        #########################################################
        modulename="ARMADILLO"
        headerfile="armadillo"
        echo -n "Detecting $headerfile... " 
        incdir=$(env | grep ${modulename}_I | awk -F= '{print $2}')
        incvar=$(env | grep ${modulename}_I | awk -F= '{print $1}')
        libdir=$(env | grep ${modulename}_L | awk -F= '{print $2}')
        libvar=$(env | grep ${modulename}_L | awk -F= '{print $1}')
        if ! [ "$libdir" ]; then libdir=. ; fi
        cat > $tmpfile <<-EOF
	#include "$headerfile"
	int main(){return 0;}
EOF
        if [ "$incdir" ]; then
            if ! $CXX -I"$incdir" -L"$libdir" $tmpfile &> /dev/null; then 
                echo "not found"
                echo -n " -DNOARMADILLO" >> config.mk
            else
                accincdir="$accincdir -IZ$incvar"
                acclibdir="$acclibdir -LZ$libvar"
                echo "found"
            fi
        else
            if ! $CXX $tmpfile &> /dev/null; then 
                echo "not found"
                echo -n " -DNOARMADILLO" >> config.mk
            else
                echo "found"
            fi
        fi
        #########################################################
        echo CXXFLAGS+="$accincdir"  | sed 's/-IZ/-I$/g' >> config.mk
        echo LDFLAGS+="$acclibdir"  | sed 's/-LZ/-L$/g' >> config.mk
        echo >> config.mk
        
        # add prefix to the makefile include file
        echo -e "#\n# Default installation directory\n#\nPREFIX?=${prefix}" >> config.mk
        # print what to do next
        echo "To build and run unit tests:            make test"
        echo "To run unit tests through valgrind:     make valgrindtest"
        echo "To check code coverage of tests:        make covertest"
        echo "To build and run benchmark test:        make benchmark"
        echo "To build the documentation:             make doc"
        echo "To test the code in the documentation:  make doctest"
        echo "To install rarray.h:                    make [PREFIX=directory]"
    else
        echo "ERROR: Compiler not found"
        false
    fi
    
fi

